                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module morse
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _dah
                                     12 	.globl _dih
                                     13 	.globl _intra_duration_words
                                     14 	.globl _intra_duration_chars
                                     15 	.globl _intra_duration_char
                                     16 	.globl _morse_wpm_increase
                                     17 	.globl _morse_wpm_decrease
                                     18 	.globl _morse_init
                                     19 	.globl _delay
                                     20 	.globl _CY
                                     21 	.globl _AC
                                     22 	.globl _F0
                                     23 	.globl _RS1
                                     24 	.globl _RS0
                                     25 	.globl _OV
                                     26 	.globl _F1
                                     27 	.globl _P
                                     28 	.globl _PS
                                     29 	.globl _PT1
                                     30 	.globl _PX1
                                     31 	.globl _PT0
                                     32 	.globl _PX0
                                     33 	.globl _RD
                                     34 	.globl _WR
                                     35 	.globl _T1
                                     36 	.globl _T0
                                     37 	.globl _INT1
                                     38 	.globl _INT0
                                     39 	.globl _TXD
                                     40 	.globl _RXD
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _EA
                                     50 	.globl _ES
                                     51 	.globl _ET1
                                     52 	.globl _EX1
                                     53 	.globl _ET0
                                     54 	.globl _EX0
                                     55 	.globl _P2_7
                                     56 	.globl _P2_6
                                     57 	.globl _P2_5
                                     58 	.globl _P2_4
                                     59 	.globl _P2_3
                                     60 	.globl _P2_2
                                     61 	.globl _P2_1
                                     62 	.globl _P2_0
                                     63 	.globl _SM0
                                     64 	.globl _SM1
                                     65 	.globl _SM2
                                     66 	.globl _REN
                                     67 	.globl _TB8
                                     68 	.globl _RB8
                                     69 	.globl _TI
                                     70 	.globl _RI
                                     71 	.globl _P1_7
                                     72 	.globl _P1_6
                                     73 	.globl _P1_5
                                     74 	.globl _P1_4
                                     75 	.globl _P1_3
                                     76 	.globl _P1_2
                                     77 	.globl _P1_1
                                     78 	.globl _P1_0
                                     79 	.globl _TF1
                                     80 	.globl _TR1
                                     81 	.globl _TF0
                                     82 	.globl _TR0
                                     83 	.globl _IE1
                                     84 	.globl _IT1
                                     85 	.globl _IE0
                                     86 	.globl _IT0
                                     87 	.globl _P0_7
                                     88 	.globl _P0_6
                                     89 	.globl _P0_5
                                     90 	.globl _P0_4
                                     91 	.globl _P0_3
                                     92 	.globl _P0_2
                                     93 	.globl _P0_1
                                     94 	.globl _P0_0
                                     95 	.globl _B
                                     96 	.globl _ACC
                                     97 	.globl _PSW
                                     98 	.globl _IP
                                     99 	.globl _P3
                                    100 	.globl _IE
                                    101 	.globl _P2
                                    102 	.globl _SBUF
                                    103 	.globl _SCON
                                    104 	.globl _P1
                                    105 	.globl _TH1
                                    106 	.globl _TH0
                                    107 	.globl _TL1
                                    108 	.globl _TL0
                                    109 	.globl _TMOD
                                    110 	.globl _TCON
                                    111 	.globl _PCON
                                    112 	.globl _DPH
                                    113 	.globl _DPL
                                    114 	.globl _SP
                                    115 	.globl _P0
                                    116 	.globl _dot_duration_ms
                                    117 	.globl _dot_duration
                                    118 ;--------------------------------------------------------
                                    119 ; special function registers
                                    120 ;--------------------------------------------------------
                                    121 	.area RSEG    (ABS,DATA)
      000000                        122 	.org 0x0000
                           000080   123 G$P0$0_0$0 == 0x0080
                           000080   124 _P0	=	0x0080
                           000081   125 G$SP$0_0$0 == 0x0081
                           000081   126 _SP	=	0x0081
                           000082   127 G$DPL$0_0$0 == 0x0082
                           000082   128 _DPL	=	0x0082
                           000083   129 G$DPH$0_0$0 == 0x0083
                           000083   130 _DPH	=	0x0083
                           000087   131 G$PCON$0_0$0 == 0x0087
                           000087   132 _PCON	=	0x0087
                           000088   133 G$TCON$0_0$0 == 0x0088
                           000088   134 _TCON	=	0x0088
                           000089   135 G$TMOD$0_0$0 == 0x0089
                           000089   136 _TMOD	=	0x0089
                           00008A   137 G$TL0$0_0$0 == 0x008a
                           00008A   138 _TL0	=	0x008a
                           00008B   139 G$TL1$0_0$0 == 0x008b
                           00008B   140 _TL1	=	0x008b
                           00008C   141 G$TH0$0_0$0 == 0x008c
                           00008C   142 _TH0	=	0x008c
                           00008D   143 G$TH1$0_0$0 == 0x008d
                           00008D   144 _TH1	=	0x008d
                           000090   145 G$P1$0_0$0 == 0x0090
                           000090   146 _P1	=	0x0090
                           000098   147 G$SCON$0_0$0 == 0x0098
                           000098   148 _SCON	=	0x0098
                           000099   149 G$SBUF$0_0$0 == 0x0099
                           000099   150 _SBUF	=	0x0099
                           0000A0   151 G$P2$0_0$0 == 0x00a0
                           0000A0   152 _P2	=	0x00a0
                           0000A8   153 G$IE$0_0$0 == 0x00a8
                           0000A8   154 _IE	=	0x00a8
                           0000B0   155 G$P3$0_0$0 == 0x00b0
                           0000B0   156 _P3	=	0x00b0
                           0000B8   157 G$IP$0_0$0 == 0x00b8
                           0000B8   158 _IP	=	0x00b8
                           0000D0   159 G$PSW$0_0$0 == 0x00d0
                           0000D0   160 _PSW	=	0x00d0
                           0000E0   161 G$ACC$0_0$0 == 0x00e0
                           0000E0   162 _ACC	=	0x00e0
                           0000F0   163 G$B$0_0$0 == 0x00f0
                           0000F0   164 _B	=	0x00f0
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 G$P0_0$0_0$0 == 0x0080
                           000080   171 _P0_0	=	0x0080
                           000081   172 G$P0_1$0_0$0 == 0x0081
                           000081   173 _P0_1	=	0x0081
                           000082   174 G$P0_2$0_0$0 == 0x0082
                           000082   175 _P0_2	=	0x0082
                           000083   176 G$P0_3$0_0$0 == 0x0083
                           000083   177 _P0_3	=	0x0083
                           000084   178 G$P0_4$0_0$0 == 0x0084
                           000084   179 _P0_4	=	0x0084
                           000085   180 G$P0_5$0_0$0 == 0x0085
                           000085   181 _P0_5	=	0x0085
                           000086   182 G$P0_6$0_0$0 == 0x0086
                           000086   183 _P0_6	=	0x0086
                           000087   184 G$P0_7$0_0$0 == 0x0087
                           000087   185 _P0_7	=	0x0087
                           000088   186 G$IT0$0_0$0 == 0x0088
                           000088   187 _IT0	=	0x0088
                           000089   188 G$IE0$0_0$0 == 0x0089
                           000089   189 _IE0	=	0x0089
                           00008A   190 G$IT1$0_0$0 == 0x008a
                           00008A   191 _IT1	=	0x008a
                           00008B   192 G$IE1$0_0$0 == 0x008b
                           00008B   193 _IE1	=	0x008b
                           00008C   194 G$TR0$0_0$0 == 0x008c
                           00008C   195 _TR0	=	0x008c
                           00008D   196 G$TF0$0_0$0 == 0x008d
                           00008D   197 _TF0	=	0x008d
                           00008E   198 G$TR1$0_0$0 == 0x008e
                           00008E   199 _TR1	=	0x008e
                           00008F   200 G$TF1$0_0$0 == 0x008f
                           00008F   201 _TF1	=	0x008f
                           000090   202 G$P1_0$0_0$0 == 0x0090
                           000090   203 _P1_0	=	0x0090
                           000091   204 G$P1_1$0_0$0 == 0x0091
                           000091   205 _P1_1	=	0x0091
                           000092   206 G$P1_2$0_0$0 == 0x0092
                           000092   207 _P1_2	=	0x0092
                           000093   208 G$P1_3$0_0$0 == 0x0093
                           000093   209 _P1_3	=	0x0093
                           000094   210 G$P1_4$0_0$0 == 0x0094
                           000094   211 _P1_4	=	0x0094
                           000095   212 G$P1_5$0_0$0 == 0x0095
                           000095   213 _P1_5	=	0x0095
                           000096   214 G$P1_6$0_0$0 == 0x0096
                           000096   215 _P1_6	=	0x0096
                           000097   216 G$P1_7$0_0$0 == 0x0097
                           000097   217 _P1_7	=	0x0097
                           000098   218 G$RI$0_0$0 == 0x0098
                           000098   219 _RI	=	0x0098
                           000099   220 G$TI$0_0$0 == 0x0099
                           000099   221 _TI	=	0x0099
                           00009A   222 G$RB8$0_0$0 == 0x009a
                           00009A   223 _RB8	=	0x009a
                           00009B   224 G$TB8$0_0$0 == 0x009b
                           00009B   225 _TB8	=	0x009b
                           00009C   226 G$REN$0_0$0 == 0x009c
                           00009C   227 _REN	=	0x009c
                           00009D   228 G$SM2$0_0$0 == 0x009d
                           00009D   229 _SM2	=	0x009d
                           00009E   230 G$SM1$0_0$0 == 0x009e
                           00009E   231 _SM1	=	0x009e
                           00009F   232 G$SM0$0_0$0 == 0x009f
                           00009F   233 _SM0	=	0x009f
                           0000A0   234 G$P2_0$0_0$0 == 0x00a0
                           0000A0   235 _P2_0	=	0x00a0
                           0000A1   236 G$P2_1$0_0$0 == 0x00a1
                           0000A1   237 _P2_1	=	0x00a1
                           0000A2   238 G$P2_2$0_0$0 == 0x00a2
                           0000A2   239 _P2_2	=	0x00a2
                           0000A3   240 G$P2_3$0_0$0 == 0x00a3
                           0000A3   241 _P2_3	=	0x00a3
                           0000A4   242 G$P2_4$0_0$0 == 0x00a4
                           0000A4   243 _P2_4	=	0x00a4
                           0000A5   244 G$P2_5$0_0$0 == 0x00a5
                           0000A5   245 _P2_5	=	0x00a5
                           0000A6   246 G$P2_6$0_0$0 == 0x00a6
                           0000A6   247 _P2_6	=	0x00a6
                           0000A7   248 G$P2_7$0_0$0 == 0x00a7
                           0000A7   249 _P2_7	=	0x00a7
                           0000A8   250 G$EX0$0_0$0 == 0x00a8
                           0000A8   251 _EX0	=	0x00a8
                           0000A9   252 G$ET0$0_0$0 == 0x00a9
                           0000A9   253 _ET0	=	0x00a9
                           0000AA   254 G$EX1$0_0$0 == 0x00aa
                           0000AA   255 _EX1	=	0x00aa
                           0000AB   256 G$ET1$0_0$0 == 0x00ab
                           0000AB   257 _ET1	=	0x00ab
                           0000AC   258 G$ES$0_0$0 == 0x00ac
                           0000AC   259 _ES	=	0x00ac
                           0000AF   260 G$EA$0_0$0 == 0x00af
                           0000AF   261 _EA	=	0x00af
                           0000B0   262 G$P3_0$0_0$0 == 0x00b0
                           0000B0   263 _P3_0	=	0x00b0
                           0000B1   264 G$P3_1$0_0$0 == 0x00b1
                           0000B1   265 _P3_1	=	0x00b1
                           0000B2   266 G$P3_2$0_0$0 == 0x00b2
                           0000B2   267 _P3_2	=	0x00b2
                           0000B3   268 G$P3_3$0_0$0 == 0x00b3
                           0000B3   269 _P3_3	=	0x00b3
                           0000B4   270 G$P3_4$0_0$0 == 0x00b4
                           0000B4   271 _P3_4	=	0x00b4
                           0000B5   272 G$P3_5$0_0$0 == 0x00b5
                           0000B5   273 _P3_5	=	0x00b5
                           0000B6   274 G$P3_6$0_0$0 == 0x00b6
                           0000B6   275 _P3_6	=	0x00b6
                           0000B7   276 G$P3_7$0_0$0 == 0x00b7
                           0000B7   277 _P3_7	=	0x00b7
                           0000B0   278 G$RXD$0_0$0 == 0x00b0
                           0000B0   279 _RXD	=	0x00b0
                           0000B1   280 G$TXD$0_0$0 == 0x00b1
                           0000B1   281 _TXD	=	0x00b1
                           0000B2   282 G$INT0$0_0$0 == 0x00b2
                           0000B2   283 _INT0	=	0x00b2
                           0000B3   284 G$INT1$0_0$0 == 0x00b3
                           0000B3   285 _INT1	=	0x00b3
                           0000B4   286 G$T0$0_0$0 == 0x00b4
                           0000B4   287 _T0	=	0x00b4
                           0000B5   288 G$T1$0_0$0 == 0x00b5
                           0000B5   289 _T1	=	0x00b5
                           0000B6   290 G$WR$0_0$0 == 0x00b6
                           0000B6   291 _WR	=	0x00b6
                           0000B7   292 G$RD$0_0$0 == 0x00b7
                           0000B7   293 _RD	=	0x00b7
                           0000B8   294 G$PX0$0_0$0 == 0x00b8
                           0000B8   295 _PX0	=	0x00b8
                           0000B9   296 G$PT0$0_0$0 == 0x00b9
                           0000B9   297 _PT0	=	0x00b9
                           0000BA   298 G$PX1$0_0$0 == 0x00ba
                           0000BA   299 _PX1	=	0x00ba
                           0000BB   300 G$PT1$0_0$0 == 0x00bb
                           0000BB   301 _PT1	=	0x00bb
                           0000BC   302 G$PS$0_0$0 == 0x00bc
                           0000BC   303 _PS	=	0x00bc
                           0000D0   304 G$P$0_0$0 == 0x00d0
                           0000D0   305 _P	=	0x00d0
                           0000D1   306 G$F1$0_0$0 == 0x00d1
                           0000D1   307 _F1	=	0x00d1
                           0000D2   308 G$OV$0_0$0 == 0x00d2
                           0000D2   309 _OV	=	0x00d2
                           0000D3   310 G$RS0$0_0$0 == 0x00d3
                           0000D3   311 _RS0	=	0x00d3
                           0000D4   312 G$RS1$0_0$0 == 0x00d4
                           0000D4   313 _RS1	=	0x00d4
                           0000D5   314 G$F0$0_0$0 == 0x00d5
                           0000D5   315 _F0	=	0x00d5
                           0000D6   316 G$AC$0_0$0 == 0x00d6
                           0000D6   317 _AC	=	0x00d6
                           0000D7   318 G$CY$0_0$0 == 0x00d7
                           0000D7   319 _CY	=	0x00d7
                                    320 ;--------------------------------------------------------
                                    321 ; overlayable register banks
                                    322 ;--------------------------------------------------------
                                    323 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        324 	.ds 8
                                    325 ;--------------------------------------------------------
                                    326 ; internal ram data
                                    327 ;--------------------------------------------------------
                                    328 	.area DSEG    (DATA)
                           000000   329 G$dot_duration_ms$0_0$0==.
      000000                        330 _dot_duration_ms::
      000000                        331 	.ds 2
                                    332 ;--------------------------------------------------------
                                    333 ; overlayable items in internal ram 
                                    334 ;--------------------------------------------------------
                                    335 ;--------------------------------------------------------
                                    336 ; indirectly addressable internal ram data
                                    337 ;--------------------------------------------------------
                                    338 	.area ISEG    (DATA)
                                    339 ;--------------------------------------------------------
                                    340 ; absolute internal ram data
                                    341 ;--------------------------------------------------------
                                    342 	.area IABS    (ABS,DATA)
                                    343 	.area IABS    (ABS,DATA)
                                    344 ;--------------------------------------------------------
                                    345 ; bit data
                                    346 ;--------------------------------------------------------
                                    347 	.area BSEG    (BIT)
                                    348 ;--------------------------------------------------------
                                    349 ; paged external ram data
                                    350 ;--------------------------------------------------------
                                    351 	.area PSEG    (PAG,XDATA)
                                    352 ;--------------------------------------------------------
                                    353 ; external ram data
                                    354 ;--------------------------------------------------------
                                    355 	.area XSEG    (XDATA)
                                    356 ;--------------------------------------------------------
                                    357 ; absolute external ram data
                                    358 ;--------------------------------------------------------
                                    359 	.area XABS    (ABS,XDATA)
                                    360 ;--------------------------------------------------------
                                    361 ; external initialized ram data
                                    362 ;--------------------------------------------------------
                                    363 	.area XISEG   (XDATA)
                                    364 	.area HOME    (CODE)
                                    365 	.area GSINIT0 (CODE)
                                    366 	.area GSINIT1 (CODE)
                                    367 	.area GSINIT2 (CODE)
                                    368 	.area GSINIT3 (CODE)
                                    369 	.area GSINIT4 (CODE)
                                    370 	.area GSINIT5 (CODE)
                                    371 	.area GSINIT  (CODE)
                                    372 	.area GSFINAL (CODE)
                                    373 	.area CSEG    (CODE)
                                    374 ;--------------------------------------------------------
                                    375 ; global & static initialisations
                                    376 ;--------------------------------------------------------
                                    377 	.area HOME    (CODE)
                                    378 	.area GSINIT  (CODE)
                                    379 	.area GSFINAL (CODE)
                                    380 	.area GSINIT  (CODE)
                                    381 ;--------------------------------------------------------
                                    382 ; Home
                                    383 ;--------------------------------------------------------
                                    384 	.area HOME    (CODE)
                                    385 	.area HOME    (CODE)
                                    386 ;--------------------------------------------------------
                                    387 ; code
                                    388 ;--------------------------------------------------------
                                    389 	.area CSEG    (CODE)
                                    390 ;------------------------------------------------------------
                                    391 ;Allocation info for local variables in function 'morse_init'
                                    392 ;------------------------------------------------------------
                           000000   393 	G$morse_init$0$0 ==.
                           000000   394 	C$morse.c$25$0_0$4 ==.
                                    395 ;	morse.c:25: void morse_init(void) {
                                    396 ;	-----------------------------------------
                                    397 ;	 function morse_init
                                    398 ;	-----------------------------------------
      000000                        399 _morse_init:
                           000007   400 	ar7 = 0x07
                           000006   401 	ar6 = 0x06
                           000005   402 	ar5 = 0x05
                           000004   403 	ar4 = 0x04
                           000003   404 	ar3 = 0x03
                           000002   405 	ar2 = 0x02
                           000001   406 	ar1 = 0x01
                           000000   407 	ar0 = 0x00
                           000000   408 	C$morse.c$26$1_0$4 ==.
                                    409 ;	morse.c:26: dot_duration_ms = WPM_BASE_TIME;
      000000 75*00 32         [24]  410 	mov	_dot_duration_ms,#0x32
      000003 75*01 00         [24]  411 	mov	(_dot_duration_ms + 1),#0x00
                           000006   412 	C$morse.c$27$1_0$4 ==.
                                    413 ;	morse.c:27: }
                           000006   414 	C$morse.c$27$1_0$4 ==.
                           000006   415 	XG$morse_init$0$0 ==.
      000006 22               [24]  416 	ret
                                    417 ;------------------------------------------------------------
                                    418 ;Allocation info for local variables in function 'morse_wpm_decrease'
                                    419 ;------------------------------------------------------------
                           000007   420 	G$morse_wpm_decrease$0$0 ==.
                           000007   421 	C$morse.c$29$1_0$5 ==.
                                    422 ;	morse.c:29: void morse_wpm_decrease() {
                                    423 ;	-----------------------------------------
                                    424 ;	 function morse_wpm_decrease
                                    425 ;	-----------------------------------------
      000007                        426 _morse_wpm_decrease:
                           000007   427 	C$morse.c$30$1_0$5 ==.
                                    428 ;	morse.c:30: if (dot_duration_ms > 5) {
      000007 C3               [12]  429 	clr	c
      000008 74 05            [12]  430 	mov	a,#0x05
      00000A 95*00            [12]  431 	subb	a,_dot_duration_ms
      00000C E4               [12]  432 	clr	a
      00000D 95*01            [12]  433 	subb	a,(_dot_duration_ms + 1)
      00000F 50 09            [24]  434 	jnc	00103$
                           000011   435 	C$morse.c$31$2_0$6 ==.
                                    436 ;	morse.c:31: dot_duration_ms -= 1;  
      000011 15*00            [12]  437 	dec	_dot_duration_ms
      000013 74 FF            [12]  438 	mov	a,#0xff
      000015 B5*00 02         [24]  439 	cjne	a,_dot_duration_ms,00110$
      000018 15*01            [12]  440 	dec	(_dot_duration_ms + 1)
      00001A                        441 00110$:
      00001A                        442 00103$:
                           00001A   443 	C$morse.c$33$1_0$5 ==.
                                    444 ;	morse.c:33: }
                           00001A   445 	C$morse.c$33$1_0$5 ==.
                           00001A   446 	XG$morse_wpm_decrease$0$0 ==.
      00001A 22               [24]  447 	ret
                                    448 ;------------------------------------------------------------
                                    449 ;Allocation info for local variables in function 'morse_wpm_increase'
                                    450 ;------------------------------------------------------------
                           00001B   451 	G$morse_wpm_increase$0$0 ==.
                           00001B   452 	C$morse.c$35$1_0$7 ==.
                                    453 ;	morse.c:35: void morse_wpm_increase() {
                                    454 ;	-----------------------------------------
                                    455 ;	 function morse_wpm_increase
                                    456 ;	-----------------------------------------
      00001B                        457 _morse_wpm_increase:
                           00001B   458 	C$morse.c$36$1_0$7 ==.
                                    459 ;	morse.c:36: if (dot_duration_ms < 250) {
      00001B C3               [12]  460 	clr	c
      00001C E5*00            [12]  461 	mov	a,_dot_duration_ms
      00001E 94 FA            [12]  462 	subb	a,#0xfa
      000020 E5*01            [12]  463 	mov	a,(_dot_duration_ms + 1)
      000022 94 00            [12]  464 	subb	a,#0x00
      000024 50 0B            [24]  465 	jnc	00103$
                           000026   466 	C$morse.c$37$2_0$8 ==.
                                    467 ;	morse.c:37: dot_duration_ms += 1;  
      000026 74 01            [12]  468 	mov	a,#0x01
      000028 25*00            [12]  469 	add	a,_dot_duration_ms
      00002A F5*00            [12]  470 	mov	_dot_duration_ms,a
      00002C E4               [12]  471 	clr	a
      00002D 35*01            [12]  472 	addc	a,(_dot_duration_ms + 1)
      00002F F5*01            [12]  473 	mov	(_dot_duration_ms + 1),a
      000031                        474 00103$:
                           000031   475 	C$morse.c$39$1_0$7 ==.
                                    476 ;	morse.c:39: }
                           000031   477 	C$morse.c$39$1_0$7 ==.
                           000031   478 	XG$morse_wpm_increase$0$0 ==.
      000031 22               [24]  479 	ret
                                    480 ;------------------------------------------------------------
                                    481 ;Allocation info for local variables in function 'dot_duration'
                                    482 ;------------------------------------------------------------
                                    483 ;n_times                   Allocated to registers r6 r7 
                                    484 ;n                         Allocated to registers r4 r5 
                                    485 ;------------------------------------------------------------
                           000032   486 	G$dot_duration$0$0 ==.
                           000032   487 	C$morse.c$41$1_0$10 ==.
                                    488 ;	morse.c:41: void dot_duration(unsigned int n_times) {
                                    489 ;	-----------------------------------------
                                    490 ;	 function dot_duration
                                    491 ;	-----------------------------------------
      000032                        492 _dot_duration:
      000032 AE 82            [24]  493 	mov	r6,dpl
      000034 AF 83            [24]  494 	mov	r7,dph
                           000036   495 	C$morse.c$44$1_0$10 ==.
                                    496 ;	morse.c:44: if (!n_times) {
      000036 EE               [12]  497 	mov	a,r6
      000037 4F               [12]  498 	orl	a,r7
                           000038   499 	C$morse.c$45$2_0$11 ==.
                                    500 ;	morse.c:45: n = 1;
      000038 70 05            [24]  501 	jnz	00102$
      00003A 7C 01            [12]  502 	mov	r4,#0x01
      00003C FD               [12]  503 	mov	r5,a
      00003D 80 04            [24]  504 	sjmp	00103$
      00003F                        505 00102$:
                           00003F   506 	C$morse.c$47$2_0$12 ==.
                                    507 ;	morse.c:47: n = n_times;
      00003F 8E 04            [24]  508 	mov	ar4,r6
      000041 8F 05            [24]  509 	mov	ar5,r7
      000043                        510 00103$:
                           000043   511 	C$morse.c$50$1_0$10 ==.
                                    512 ;	morse.c:50: delay((dot_duration_ms * n));
      000043 8C*00            [24]  513 	mov	__mulint_PARM_2,r4
      000045 8D*01            [24]  514 	mov	(__mulint_PARM_2 + 1),r5
      000047 85*00 82         [24]  515 	mov	dpl,_dot_duration_ms
      00004A 85*01 83         [24]  516 	mov	dph,(_dot_duration_ms + 1)
      00004D 12r00r00         [24]  517 	lcall	__mulint
      000050 12r00r00         [24]  518 	lcall	_delay
                           000053   519 	C$morse.c$51$1_0$10 ==.
                                    520 ;	morse.c:51: }
                           000053   521 	C$morse.c$51$1_0$10 ==.
                           000053   522 	XG$dot_duration$0$0 ==.
      000053 22               [24]  523 	ret
                                    524 ;------------------------------------------------------------
                                    525 ;Allocation info for local variables in function 'intra_duration_char'
                                    526 ;------------------------------------------------------------
                           000054   527 	G$intra_duration_char$0$0 ==.
                           000054   528 	C$morse.c$53$1_0$14 ==.
                                    529 ;	morse.c:53: void intra_duration_char(void) {
                                    530 ;	-----------------------------------------
                                    531 ;	 function intra_duration_char
                                    532 ;	-----------------------------------------
      000054                        533 _intra_duration_char:
                           000054   534 	C$morse.c$54$1_0$14 ==.
                                    535 ;	morse.c:54: dot_duration(1);   
      000054 90 00 01         [24]  536 	mov	dptr,#0x0001
      000057 12r00r32         [24]  537 	lcall	_dot_duration
                           00005A   538 	C$morse.c$55$1_0$14 ==.
                                    539 ;	morse.c:55: }
                           00005A   540 	C$morse.c$55$1_0$14 ==.
                           00005A   541 	XG$intra_duration_char$0$0 ==.
      00005A 22               [24]  542 	ret
                                    543 ;------------------------------------------------------------
                                    544 ;Allocation info for local variables in function 'intra_duration_chars'
                                    545 ;------------------------------------------------------------
                           00005B   546 	G$intra_duration_chars$0$0 ==.
                           00005B   547 	C$morse.c$57$1_0$16 ==.
                                    548 ;	morse.c:57: void intra_duration_chars(void) {
                                    549 ;	-----------------------------------------
                                    550 ;	 function intra_duration_chars
                                    551 ;	-----------------------------------------
      00005B                        552 _intra_duration_chars:
                           00005B   553 	C$morse.c$58$1_0$16 ==.
                                    554 ;	morse.c:58: dot_duration(3);  
      00005B 90 00 03         [24]  555 	mov	dptr,#0x0003
      00005E 12r00r32         [24]  556 	lcall	_dot_duration
                           000061   557 	C$morse.c$59$1_0$16 ==.
                                    558 ;	morse.c:59: }
                           000061   559 	C$morse.c$59$1_0$16 ==.
                           000061   560 	XG$intra_duration_chars$0$0 ==.
      000061 22               [24]  561 	ret
                                    562 ;------------------------------------------------------------
                                    563 ;Allocation info for local variables in function 'intra_duration_words'
                                    564 ;------------------------------------------------------------
                           000062   565 	G$intra_duration_words$0$0 ==.
                           000062   566 	C$morse.c$61$1_0$18 ==.
                                    567 ;	morse.c:61: void intra_duration_words(void) {
                                    568 ;	-----------------------------------------
                                    569 ;	 function intra_duration_words
                                    570 ;	-----------------------------------------
      000062                        571 _intra_duration_words:
                           000062   572 	C$morse.c$62$1_0$18 ==.
                                    573 ;	morse.c:62: dot_duration(7);   
      000062 90 00 07         [24]  574 	mov	dptr,#0x0007
      000065 12r00r32         [24]  575 	lcall	_dot_duration
                           000068   576 	C$morse.c$63$1_0$18 ==.
                                    577 ;	morse.c:63: }
                           000068   578 	C$morse.c$63$1_0$18 ==.
                           000068   579 	XG$intra_duration_words$0$0 ==.
      000068 22               [24]  580 	ret
                                    581 ;------------------------------------------------------------
                                    582 ;Allocation info for local variables in function 'dih'
                                    583 ;------------------------------------------------------------
                           000069   584 	G$dih$0$0 ==.
                           000069   585 	C$morse.c$65$1_0$20 ==.
                                    586 ;	morse.c:65: void dih(void) {
                                    587 ;	-----------------------------------------
                                    588 ;	 function dih
                                    589 ;	-----------------------------------------
      000069                        590 _dih:
                           000069   591 	C$morse.c$66$1_0$20 ==.
                                    592 ;	morse.c:66: OUT_MORSE = 1;
                                    593 ;	assignBit
      000069 D2 91            [12]  594 	setb	_P1_1
                           00006B   595 	C$morse.c$67$1_0$20 ==.
                                    596 ;	morse.c:67: dot_duration(1);
      00006B 90 00 01         [24]  597 	mov	dptr,#0x0001
      00006E 12r00r32         [24]  598 	lcall	_dot_duration
                           000071   599 	C$morse.c$68$1_0$20 ==.
                                    600 ;	morse.c:68: OUT_MORSE = 0;
                                    601 ;	assignBit
      000071 C2 91            [12]  602 	clr	_P1_1
                           000073   603 	C$morse.c$69$1_0$20 ==.
                                    604 ;	morse.c:69: }
                           000073   605 	C$morse.c$69$1_0$20 ==.
                           000073   606 	XG$dih$0$0 ==.
      000073 22               [24]  607 	ret
                                    608 ;------------------------------------------------------------
                                    609 ;Allocation info for local variables in function 'dah'
                                    610 ;------------------------------------------------------------
                           000074   611 	G$dah$0$0 ==.
                           000074   612 	C$morse.c$71$1_0$22 ==.
                                    613 ;	morse.c:71: void dah(void) {
                                    614 ;	-----------------------------------------
                                    615 ;	 function dah
                                    616 ;	-----------------------------------------
      000074                        617 _dah:
                           000074   618 	C$morse.c$72$1_0$22 ==.
                                    619 ;	morse.c:72: OUT_MORSE = 1;
                                    620 ;	assignBit
      000074 D2 91            [12]  621 	setb	_P1_1
                           000076   622 	C$morse.c$73$1_0$22 ==.
                                    623 ;	morse.c:73: dot_duration(3);
      000076 90 00 03         [24]  624 	mov	dptr,#0x0003
      000079 12r00r32         [24]  625 	lcall	_dot_duration
                           00007C   626 	C$morse.c$74$1_0$22 ==.
                                    627 ;	morse.c:74: OUT_MORSE = 0;
                                    628 ;	assignBit
      00007C C2 91            [12]  629 	clr	_P1_1
                           00007E   630 	C$morse.c$75$1_0$22 ==.
                                    631 ;	morse.c:75: }
                           00007E   632 	C$morse.c$75$1_0$22 ==.
                           00007E   633 	XG$dah$0$0 ==.
      00007E 22               [24]  634 	ret
                                    635 	.area CSEG    (CODE)
                                    636 	.area CONST   (CODE)
                                    637 	.area XINIT   (CODE)
                                    638 	.area CABS    (ABS,CODE)
